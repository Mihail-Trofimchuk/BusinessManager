<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:components="clr-namespace:BusinessManager.Components"
        xmlns:local="clr-namespace:BusinessManager.Views"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
       xmlns:viewmodel="clr-namespace:BusinessManager.ViewModel"
        xmlns:hc="https://handyorg.github.io/handycontrol" xmlns:jas="clr-namespace:BusinessManager.Model" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" x:Class="BusinessManager.Views.LoginForm"
        mc:Ignorable="d" x:Name="home"
        Title="MainWindow" Height="450" Width="800" AllowsTransparency="True" Background="Transparent" WindowStyle="None" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style TargetType="{x:Type Button}" x:Key="ok">
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />

                    </MultiTrigger.Conditions>
                    <Setter Property="FontSize" Value="20" />
                    <Setter Property="Foreground" Value="#FF1A98A9" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="test" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="ButtonBorder" CornerRadius="7" BorderThickness="1" Background="{DynamicResource PrimaryBlueColor}"  >
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Window.DataContext>
        <viewmodel:LoginFormViewModel/>
    </Window.DataContext>

    <Border Background="White" BorderThickness="1,1,1,1" CornerRadius="20">
        <Grid >

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="335*"/>
                <ColumnDefinition Width="138*"/>
                <ColumnDefinition Width="325*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="16*"/>
                <RowDefinition Height="179*"/>
                <RowDefinition Height="29*"/>
            </Grid.RowDefinitions>

            <Grid  x:Name="Login" Margin="0,3,0,0" Visibility="Visible" HorizontalAlignment="Center" Width="360" Height="338" VerticalAlignment="Top" Grid.Row="1" Grid.ColumnSpan="2">
                <Grid x:Name="Logo" Margin="416,11,-323,87">
                    <Path Data="{DynamicResource logo}" Margin="51.575,10,0,0" Stretch="Fill" Fill="{DynamicResource PrimaryBlue}" Width="162" Height="150" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <Label Content="Money Flow" Foreground="{DynamicResource PrimaryBlue}" FontWeight="Bold" FontSize="40" VerticalAlignment="Top" HorizontalContentAlignment="Left" HorizontalAlignment="Left" Margin="10,178.286,0,0" Height="66" Width="249"/>
                </Grid>
                <TextBlock HorizontalAlignment="Left" Height="40" TextWrapping="Wrap" Text="Вход в учетную запись" VerticalAlignment="Top" Width="265" FontSize="22" FontWeight="Bold" Padding="0,5,0,0" Margin="50,11,0,0"/>
                <Image HorizontalAlignment="Left" Height="40" Margin="184,40,0,0" VerticalAlignment="Top" Width="40"/>
                <TextBlock HorizontalAlignment="Left" Height="29" Margin="50,92,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="265" Padding="0,5,0,0" TextAlignment="Left" Text="Ваш email" FontWeight="Bold" FontSize="14"/>

                <TextBox  x:Name="UserName" Text="{Binding Email}" Margin="50,121,0,0" Height="43" VerticalAlignment="Top" HorizontalAlignment="Left" Width="268" BorderBrush="{DynamicResource PrimaryBlue}" Cursor="Arrow" SelectionBrush="{DynamicResource PrimaryBlue}">
                    <materialDesign:HintAssist.Hint>
                        <TextBlock Foreground="#B26D6D6D"><Run Text="Введите email"/></TextBlock>
                    </materialDesign:HintAssist.Hint>
                </TextBox>
                <components:Passwords   Password="{Binding Password}" Margin="50,200,42,95" >
                    <materialDesign:HintAssist.Hint>
                        <TextBlock Foreground="#B26D6D6D"><Run Text="Введите пароль"/></TextBlock>
                    </materialDesign:HintAssist.Hint>
                </components:Passwords>

                <TextBlock HorizontalAlignment="Left" Height="29" Margin="50,166,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="265" Padding="0,5,0,0" TextAlignment="Left" Text="Пароль" FontWeight="Bold" FontSize="14"/>
                <Button x:Name ="But"  Cursor="Hand" Content="Вход в Money Flow" HorizontalAlignment="Left" Height="47" Margin="50,286,0,0" VerticalAlignment="Top" Width="268" Background="{DynamicResource PrimaryBlue}" Foreground="White"  Command="{Binding CheckNewUser}" CommandParameter="{Binding ElementName=home}"  BorderBrush="{DynamicResource PrimaryBlue}"/>
                <TextBlock HorizontalAlignment="Left" Margin="243,248,0,0" Text="Забыли пароль?" TextWrapping="Wrap" VerticalAlignment="Top" Foreground="{DynamicResource PrimaryBlue}" FontSize="10">
                        <i:Interaction.Triggers >
                                    <i:EventTrigger EventName="MouseDown" >
                                        <ei:CallMethodAction TargetObject="{Binding}" MethodName="ChangepasswordEmail"  />
                                    </i:EventTrigger>
                        </i:Interaction.Triggers>
                </TextBlock>
            </Grid>
            <!-- Блок регистрации -->
            <Grid x:Name="Login_Copy" Margin="75,0,10,16" Visibility="Hidden" Grid.ColumnSpan="3" Grid.RowSpan="3">
                <Grid x:Name="Logo_Copy" Margin="389,84,26,78">
                    <Path Data="{DynamicResource logo}" Margin="51.575,10,0,0" Stretch="Fill" Fill="{DynamicResource PrimaryBlue}" Width="162" Height="150" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <Label Content="Money Flow" Foreground="{DynamicResource PrimaryBlue}" FontWeight="Bold" FontSize="40" VerticalAlignment="Top" HorizontalContentAlignment="Left" HorizontalAlignment="Left" Margin="10,178,0,0" Height="66" Width="249"/>
                </Grid>
                <TextBlock HorizontalAlignment="Left" Height="40" TextWrapping="Wrap" Text="Регистрация" VerticalAlignment="Top" Width="144" FontSize="22" FontWeight="Bold" Padding="0,5,0,0" Margin="98,29,0,0"/>
                <Image HorizontalAlignment="Left" Height="40" Margin="169,0,0,0" VerticalAlignment="Top" Width="40"/>
                <TextBox  x:Name="Email" Margin="36,201,0,0" HorizontalAlignment="Left" Width="277" Height="36" VerticalAlignment="Top" CaretBrush="{DynamicResource PrimaryBlue}" SelectionBrush="{DynamicResource PrimaryBlue}" Cursor="Arrow">
                    <materialDesign:HintAssist.Hint>
                        <TextBlock Foreground="#B26D6D6D"><Run Text="Mihatr2002@gmail.com"/></TextBlock>
                    </materialDesign:HintAssist.Hint>
                    <Binding Path="Email" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <jas:RegexValidationRule
                             ErrorMessage="Неккоректно указан email"
                             RegexText="^([\w\.\-]+)@([\w\-]+)((\.(\w){2,3})+)$"
                             RegexOptions="IgnoreCase"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>
                <TextBlock HorizontalAlignment="Left" Height="35" Margin="36,90,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="265" Padding="0,5,0,0" TextAlignment="Left" FontWeight="Bold" FontSize="14"><Run Text="Ваше имя"/></TextBlock>

                <components:Passwords  x:Name="Password" Password="{Binding Password}"  Margin="36,283,400,116" >
                    <materialDesign:HintAssist.Hint>
                        <TextBlock Foreground="#B26D6D6D"><Run Text="Lfui45jhvjh."/></TextBlock>
                    </materialDesign:HintAssist.Hint>
                </components:Passwords>

                <Button x:Name="button2" Command="{Binding AddNewUser}" CommandParameter="{Binding ElementName=home}" Cursor="Hand" Content="Зарегистрироваться" Margin="35,352,0,0" Background="{DynamicResource PrimaryBlue}" Foreground="White" HorizontalAlignment="Left" Width="276" Height="49" VerticalAlignment="Top" BorderBrush="{DynamicResource PrimaryBlue}">

                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatMidBgButton}">

                            <Style.Triggers>

                                <MultiDataTrigger>

                                    <MultiDataTrigger.Conditions>

                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Email}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="IsEnabled" Value="False"/>

                                    </MultiDataTrigger.Setters>


                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Name}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>


                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName= Password}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>


                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=Name, Path=Text.Length}" Value="0" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=Email, Path=Text.Length}" Value="0" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=Password, Path=Text.Length}" Value="0" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="False" />
                                </MultiDataTrigger>

                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <TextBox   Name="Name"  Margin="36,120,0,0" Height="33" VerticalAlignment="Top" HorizontalAlignment="Left" Width="277" CaretBrush="{DynamicResource PrimaryBlue}" SelectionBrush="{DynamicResource PrimaryBlue}" Cursor="Arrow">
                    <materialDesign:HintAssist.Hint>
                        <TextBlock TextWrapping="Wrap" Foreground="#B26D6D6D" Width="311" Height="37">Mikle</TextBlock>
                    </materialDesign:HintAssist.Hint>
                    <Binding Path="Name" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <jas:RegexValidationRule
                             ErrorMessage="Неккоректно указано имя"
                             RegexText="^[a-zA-Zа-яА-я](.[a-zA-ZА-я_-]*)$"
                             RegexOptions="IgnoreCase"/>
                        </Binding.ValidationRules>
                    </Binding>


                </TextBox>
                <TextBlock HorizontalAlignment="Left" Height="35" TextWrapping="Wrap" VerticalAlignment="Top" Width="265" Padding="0,5,0,0" TextAlignment="Left" Text="Ваш email" FontWeight="Bold" FontSize="14" Margin="36,171,0,0"/>
                <TextBlock TextWrapping="Wrap" Padding="0,5,0,0" TextAlignment="Left" Text="Пароль" FontWeight="Bold" FontSize="14" Margin="36,253,0,0" HorizontalAlignment="Left" Width="265" Height="30" VerticalAlignment="Top"/>
                <Button Name="Back" Visibility="Hidden" Command="{Binding CloseRegGrid}" CommandParameter="{Binding ElementName=home}"  Cursor="Hand"  Content="Вернуться" HorizontalAlignment="Left" Margin="398,352,0,0" VerticalAlignment="Top" Width="268" Foreground="White" Height="46" Background="{DynamicResource PrimaryBlue}" BorderBrush="{DynamicResource PrimaryBlue}"/>
            </Grid>



            <Button Command="{Binding RegGrid}" CommandParameter="{Binding ElementName=home}" x:Name="button" Cursor="Hand"  Content="Зарегистрироваться?" HorizontalAlignment="Left" Margin="0,288,0,0" VerticalAlignment="Top" Width="268" Foreground="White" Height="46" Grid.Column="2" Grid.Row="1" Background="{DynamicResource PrimaryBlue}" BorderBrush="{DynamicResource PrimaryBlue}"/>

            <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center" Margin="229,0,0,0" Height="30" Orientation="Horizontal" FlowDirection="RightToLeft" Grid.Column="2" Width="86">
                <Button x:Name="btnClose" Style="{StaticResource IconButtonsStyle}" Content="{DynamicResource close}" Command="{Binding btnClose_Click}" CommandParameter="{Binding ElementName=home}" Tag="IsCloseButton"/>
                <Button x:Name="btnMinimize" Style="{DynamicResource IconButtonsStyle}" Content="{DynamicResource minimize}" Command="{Binding btnMinimize_Click}" CommandParameter="{Binding ElementName=home}"/>
            </StackPanel>
            <!-- Окно вообщения -->
            <Grid Visibility="Hidden" Name="LoginModal"  Background="#33000000" MouseDown="AccountModal_MouseDown" Grid.ColumnSpan="3" Grid.RowSpan="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="73*"/>
                    <RowDefinition Height="77*"/>
                </Grid.RowDefinitions>
                <Border  Width="0" Name="ModelBorder" MaxWidth="400" MaxHeight="250" CornerRadius="5" Background="White" Margin="224,139,224,128" Grid.RowSpan="2">
                    <Grid>
                        <Button Command="{Binding CloseModal}"  CommandParameter="{Binding ElementName=home}" Style="{StaticResource IconButtonsStyle}" Content="{DynamicResource close}"  Tag="IsCloseButton" Margin="0,5,5,0" Width="32" HorizontalAlignment="Right" Height="25" VerticalAlignment="Top"/>
                        <TextBlock Text="Пароль слишком простой. Пароль должен содержать заглавные и строчные буквы, а так же цифры и знаки пунктуации!" TextAlignment="Center" TextWrapping="Wrap" Margin="34,30,34,10" FontSize="20"/>
                    </Grid>
                </Border>
            </Grid>
            <Grid Visibility="Hidden" Name="LoginModalUser"  Background="#33000000" MouseDown="AccountModal_MouseDown" Grid.ColumnSpan="3" Grid.RowSpan="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="73*"/>
                    <RowDefinition Height="77*"/>
                </Grid.RowDefinitions>
                <Border  Width="0" Name="ModelBorderUser" MaxWidth="400" MaxHeight="250" CornerRadius="5" Background="White" Margin="224,139,224,115" Grid.RowSpan="2">
                    <Grid>
                        <Button Command="{Binding CloseModal}"  CommandParameter="{Binding ElementName=home}" Style="{StaticResource IconButtonsStyle}" Content="{DynamicResource close}"  Tag="IsCloseButton" Margin="0,5,5,0" Width="32" HorizontalAlignment="Right" Height="25" VerticalAlignment="Top"/>
                        <TextBlock Text="Пользователь с таким email существует!" TextAlignment="Center" TextWrapping="Wrap" Margin="34,63,34,67" FontSize="20"/>
                    </Grid>
                </Border>
            </Grid>

            <Grid Visibility="Hidden" Name="ChangePasswordEmail"  Background="#33000000" MouseDown="AccountModal_MouseDown" Grid.ColumnSpan="3" Grid.RowSpan="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="73*"/>
                    <RowDefinition Height="77*"/>
                </Grid.RowDefinitions>
                <Border  Width="350" Name="ChangePasswordEmailB" Visibility="Hidden" MouseDown="AccountModal_MouseDown"  MaxWidth="400" MaxHeight="250" CornerRadius="5" Background="White" Margin="224,139,224,115" Grid.RowSpan="2">
                    <Grid>
                        <Button Command="{Binding CloseModal}"  CommandParameter="{Binding ElementName=home}" Style="{StaticResource IconButtonsStyle}" Content="{DynamicResource close}"  Tag="IsCloseButton" Margin="0,5,5,0" Width="32" HorizontalAlignment="Right" Height="25" VerticalAlignment="Top"/>
                        <TextBlock Text="Введите email" TextAlignment="Center" TextWrapping="Wrap" Margin="34,35,34,125" FontSize="20"/>
                        <TextBox Name="CheckEmail" Margin="53,74,34,78" Text="{Binding CheckEmail}" />
                        <Button Margin="53,133,34,29" Content="Отправить пароль" Command="{Binding SendPassword}" CommandParameter="{Binding ElementName=home}" >
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatMidBgButton}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=CheckEmail, Path=Text.Length}" Value="0" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </Border>
                <Border  Width="350" Name="ChangePassword" Visibility="Hidden" MouseDown="AccountModal_MouseDown" MaxWidth="400" MaxHeight="250" CornerRadius="5" Background="White" Margin="224,139,224,115" Grid.RowSpan="2">
                    <Grid>
                        <Button Command="{Binding CloseModal}"  CommandParameter="{Binding ElementName=home}" Style="{StaticResource IconButtonsStyle}" Content="{DynamicResource close}"  Tag="IsCloseButton" Margin="0,5,5,0" Width="32" HorizontalAlignment="Right" Height="25" VerticalAlignment="Top"/>
                        <TextBlock Text="Введите пароль с почты" TextAlignment="Center" TextWrapping="Wrap" Margin="34,35,34,125" FontSize="20"/>
                        <TextBox Margin="53,74,34,78" Text="{Binding CheckPassword}" />
                        <Button Margin="53,133,34,29" Content="Отправить пароль" Command="{Binding PasswordCheck}" CommandParameter="{Binding ElementName=home}" />
                    </Grid>
                </Border>
                <Border  Width="350" Name="NewPassword" Visibility="Hidden" MouseDown="AccountModal_MouseDown" MaxWidth="400" MaxHeight="250" CornerRadius="5" Background="White" Margin="224,139,224,115" Grid.RowSpan="2">
                    <Grid>
                        <Button Command="{Binding CloseModal}"  CommandParameter="{Binding ElementName=home}" Style="{StaticResource IconButtonsStyle}" Content="{DynamicResource close}"  Tag="IsCloseButton" Margin="0,5,5,0" Width="32" HorizontalAlignment="Right" Height="25" VerticalAlignment="Top"/>
                        <TextBlock Text="Введите новый пароль" TextAlignment="Center" TextWrapping="Wrap" Margin="34,35,34,125" FontSize="20"/>
                        <TextBox Name="NewPasword"  Margin="53,74,34,78"  >
                            <Binding Path="NewPassword" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <jas:RegexValidationRule
                             ErrorMessage="Неккоректно указаy пароль"
                             RegexText="^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^a-zA-Z0-9])\S{1,16}$"
                             RegexOptions="IgnoreCase"/>
                                </Binding.ValidationRules>
                            </Binding>
                         </TextBox>

                        <Button Content="Заменить" Command="{Binding Change}" CommandParameter="{Binding ElementName=home}" HorizontalAlignment="Left" Margin="53,133,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" Width="263" Height="33">
                            <Button.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Button.RenderTransform>
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatMidBgButton}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementName=NewPasword, Path=Text.Length}" Value="0" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=NewPasword}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                 </Style>
                            </Button.Style>
                        </Button>

                    </Grid>
                </Border>


            </Grid>

        </Grid>
    </Border>
</Window>